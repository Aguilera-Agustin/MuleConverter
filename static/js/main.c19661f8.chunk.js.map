{"version":3,"sources":["components/CopyButton.js","components/Header.js","components/HomePage.js","helpers/transformData.js","helpers/conditional.js","index.js"],"names":["CopyButton","text","className","onClick","navigator","clipboard","writeText","Header","HomePage","areaStyle","whiteSpace","overflowWrap","overflowX","height","resize","useState","oldText","setOldText","newText","setNewText","variableConverter","conditionalConverter","options","setOptions","handleChange","option","res","style","width","type","id","value","onChange","htmlFor","onSubmit","e","preventDefault","myReturn","latestCharacter","comma","forEach","eachLine","element","replaceAll","includes","elementKey","slice","indexOf","elementAction","elementCondition","length","elementElseAction","converted","conditional","split","transformData","placeholder","target","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c19661f8.chunk.js","sourcesContent":["import React from 'react'\n\nexport const CopyButton = ({text}) => {\n\n    const copyOnClipboard = () => {\n        {navigator.clipboard.writeText(text)}\n    }\n    return (\n        <button className=\"btn btn-outline-primary\" onClick={copyOnClipboard}>Copy</button>  \n    )\n}\n","import React from 'react'\n\nexport const Header = () => {\n    return (\n        <div className=\"mt-4 container\">\n            <h3>Mule Converter</h3>\n            <hr/>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { transformData } from '../helpers/transformData'\nimport { CopyButton } from './CopyButton'\nimport { Header } from './Header'\n\nexport const HomePage = () => {\n    const editorStyle = {\n        width : \"100%\",\n        height : \"70vh\"\n    }\n    const areaStyle = {\n        whiteSpace: \"pre\",\n        overflowWrap: \"normal\",\n        overflowX: \"scroll\",\n        height : \"100%\",\n        resize:\"none\"\n    }\n    const [oldText, setOldText] = useState(\"\")\n    const [newText, setNewText] = useState(\"\")\n    const [options, setOptions] = useState({variableConverter: false, conditionalConverter : false})\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setNewText(transformData(oldText, options))\n    }\n    const handleChange = (option) => {\n        if(option === \"variableConverter\"){\n            const res = {\n                variableConverter : !options.variableConverter,\n                conditionalConverter : options.conditionalConverter\n            }\n            setOptions(res)\n        }\n        else{\n            const res = {\n                variableConverter : options.variableConverter,\n                conditionalConverter : !options.conditionalConverter\n            }\n            setOptions(res)\n        }\n    }\n    return (\n        <>\n        <Header/>\n        <div className=\"d-flex align-items-center justify-content-center my-2\" style={{width : \"100vw\"}}>\n            <div className = \"mx-4\">\n                <input className=\"form-check-input mx-1\" type=\"checkbox\" id=\"variableConverter\"  value={options.variableConverter} onChange={() => handleChange(\"variableConverter\")}/>\n                <label className=\"form-check-label\" htmlFor=\"variableConverter\" >Variable Transformation</label>\n            </div>\n            <div>\n                <input className=\"form-check-input mx-1\" type=\"checkbox\" id=\"conditionalConverter\"  value={options.conditionalConverter} onChange={() => handleChange(\"conditionalConverter\")}/>\n                <label className=\"form-check-label\" htmlFor=\"conditionalConverter\" >Conditional Transformation</label>\n            </div>\n        </div>\n        <form style={editorStyle} className=\"d-flex container justify-content-between\" onSubmit = {handleSubmit} >\n            \n            <textarea className=\"form-control\" placeholder=\"Put your old code here.\" style={areaStyle} value={oldText} onChange={(e) => {setOldText(e.target.value)}}></textarea>\n            \n\n            <div className=\"align-self-center mx-2\">\n                \n                <button type=\"submit\" className=\"btn btn-primary my-3\">CONVERT</button>\n                \n            </div>\n            <textarea className=\"form-control\" placeholder=\"Leave a comment here\" style={areaStyle} value={newText} onChange={(e) => {setOldText(e.target.value)}}></textarea>\n            \n        </form>\n\n        <div style={{width : \"100%\"}} className=\"d-flex container justify-content-between my-4\" >\n            \n          \n            <p>Tool designed and created 100% by <a href=\"https://www.linkedin.com/in/aguilera-agustin/\">Agustin Aguilera</a>  </p> \n            <CopyButton className=\"btn btn-outline-primary\"  text={newText} />  \n        </div>\n        </>\n    )\n}\n","import { conditional } from \"./conditional\"\n\nexport const transformData = ( text, {variableConverter, conditionalConverter} ) => {\n\n    const splittedText = text.split(\"\\n\")\n    const finalText = conditional(splittedText, variableConverter, conditionalConverter)\n\n    return finalText\n} ","export const conditional = ( text, variableConverter, conditionalConverter  ) => {\n    let myReturn = \"\"\n    let latestCharacter = \"\"\n    let comma = \"\"\n    text.forEach(eachLine => {\n        const element = variableConverter ? eachLine.replaceAll(\"flowVars\", \"vars\") : eachLine  //variableConverter ?\n        if(element.includes(\"when\") && element.includes(\"otherwise\") && conditionalConverter  ){    //conditionalConverter ?\n            const elementKey = (element.slice(0,element.indexOf(\":\")))\n            const elementAction = (element.slice(element.indexOf(\":\")+1 , element.indexOf(\"when\")))\n            const elementCondition = (element.slice(element.indexOf(\"when\")+4, element.indexOf(\"otherwise\")))\n            if(element[element.length-1] === \",\"){\n                 latestCharacter = element.length-1\n                 comma = \",\"\n            }\n            else{\n                 latestCharacter = element.length\n                 comma = \"\"\n            }\n            const elementElseAction = (element.slice(element.indexOf(\"otherwise\")+9, latestCharacter))\n            const converted = `${elementKey}: if ( ${elementCondition} ) ( ${elementAction} ) else ( ${elementElseAction} )${comma} \\n`\n            myReturn += converted\n        }\n        else{\n            myReturn += element + \"\\n\"\n        }\n       \n    });\n    return myReturn;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HomePage } from './components/HomePage';\n\nReactDOM.render(\n  <React.StrictMode >\n    <HomePage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}